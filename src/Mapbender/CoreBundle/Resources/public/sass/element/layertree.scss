.mb-element-layertree{
  user-select: none;
  line-height: 1.5; // @todo: undo global fixed-pixel-unit line height!
  .leave {
    // for absolute menu positioning
    position: relative;
  }
  .leave .leave, .themeContainer .leave {
    margin-left: 1.28em;
  }
  .selectedWrapper.disabled, .featureInfoWrapper.disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }
  .iconCheckbox, .iconCheckboxActive {
    // Mitigate visual glyph height mismatch vs folder / info bubble icons
    padding-top: 0.1ch;
  }

  .selectedWrapper, .featureInfoWrapper, .iconFolder, .sourceVisibilityWrapper {
    // keep constant size to prevent visual "jump" on icon glyph change and neatly
    // align icons across rows
    text-align:center;
    flex: 0 0 1em;
    -ms-flex: 0 0 1em;
    width: 1em; // pre-flex
    margin-right: 0.28em;
  }
  .leaveContainer {
    display: flex;
  }
  .layer-title {
    flex: 1 1 auto;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow-x: hidden;
  }
  .leave.state-loading .layer-title {
    opacity: 0.75;
  }
  .leave.state-outofscale, .leave.state-outofbounds {
    .layer-title {
      opacity: 0.5;
    }
    &.state-loading .layer-title {
      opacity: 0.35;
    }
  }
  .themeContainer{
    .layers{display:none;}
    &.showLeaves > .layers{display:block;}
  }
  .serviceContainer, .groupContainer{
    // show only layers which are toggled
    .layers{display:none;}
    &.showLeaves > .layers{display:block;}

  }
  .leave:not(.state-error) .error-icon-wrapper,
  .leave:not(.state-loading) .loading-icon-wrapper {
    display: none;
  }
  .error-icon-wrapper, .leave.state-error .layer-title {
    color: $errorColor;
  }
  .layer-menu-btn, .error-icon-wrapper, .loading-icon-wrapper {
    margin-left: 4px;
  }
}

$layer-slider-bar-height: 5px;
.layer-menu {
  color: #222;
  position: absolute;
  right: 0;
  top: 1.5em;
  background-color: white;
  padding: $space / 4;

  z-index: 45;
  // NEED constant width, otherwise the DragDealer will get confused when resizing Popup
  width: 140px;
  border: solid 1px $thirdColor;
  cursor: default;
  @include border-radius($radius);
  // arrow icon
  &:before {
    content: '';
    display: block;
    width: 0;
    height: 0;
    border-bottom: 5px solid $firstColor;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    position: absolute;
    right: 0;
    top: -5px;
  }
  &:after {
    display: none;
  }
  .layer-slider-bar {
    position: relative;
    color: $lightFontColor;
    height: $layer-slider-bar-height;
    background-color: $thirdColor;
    margin-top: $space/3;
    margin-bottom: $space/2;
    cursor: pointer;
    @include border-radius(2px);
    .layer-slider-handle {
      position: absolute;
      top: -$layer-slider-bar-height;
      left: 0;
      cursor: pointer;
      width: 30px;
      height: 16px;
      line-height: 16px;
      background-color: $sliderHandleBackgroundColor;
      text-align: center;
      @include border-radius(4px);
    }
  }
}

.userDefinedLayerTree {

    ul {
        margin-top: 10px;
        li {
            height: 34px;
            button {
                float:right;
                margin-left:20px;
                margin-top: -4px;
            }
            :hover {
                text-decoration: underline;
                cursor:pointer;
            }

            input {
                margin-top: -7px;
            }

            &.empty {
                border-top: 1px solid #ccc;
            }
        }
    }

}
